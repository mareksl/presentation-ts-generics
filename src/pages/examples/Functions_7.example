type AnyObject = Record<string, unknown>;

function betterExtend<T extends object, U extends AnyObject>(
  obj1: T,
  obj2: U
): T & U {
  return { ...obj1, ...obj2 };
}

const betterEmail = betterExtend(email, attachments);

const wrongEmail = betterExtend("Hello", attachments);
const wrongEmail_1 = betterExtend(email, "attachments");

// =======================================

function add<T extends string | number, U extends string | number>(
  num1: T,
  num2: U
): number {
  const parsedNum1 = typeof num1 === "number" ? num1 : parseFloat(num1);
  const parsedNum2 = typeof num2 === "number" ? num2 : parseFloat(num2);

  return parsedNum1 + parsedNum2;
}

const sum = add(1, "3");
// 4
